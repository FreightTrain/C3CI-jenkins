#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/jenkins_master/helpers/ctl_setup.sh 'jenkins_master'

export LANG=en_US.UTF-8
export JENKINS_HOME=/var/vcap/store/jenkins_master
java_binary=/var/vcap/packages/java/bin/java
jenkins_war=/var/vcap/packages/jenkins/jenkins.war
gems_home=/var/vcap/store/gems

case $1 in

  start)
    pid_guard $PIDFILE $JOB_NAME

    echo $$ > $PIDFILE

    mkdir -p $gems_home
    chown vcap:vcap $gems_home -R
    mkdir -p $JENKINS_HOME


    if [ -f "${JOB_DIR}/config/netrc" ]; then 
        chown vcap:vcap ${JOB_DIR}/config/netrc
        cp ${JOB_DIR}/config/netrc /home/vcap/.netrc
    else
        echo "ERROR: Missing file $JOB_DIR/config/netrc cannot continue."
        exit 1    
    fi    

    if [ -d "${JOB_DIR}/config-plugins/" ]; then 
        chown vcap:vcap ${JOB_DIR}/config-plugins/*
        cp -R ${JOB_DIR}/config-plugins/* ${JENKINS_HOME}/.
    else
        echo "ERROR: Missing config plugins directory ${JOB_DIR}/config-plugins/ cannot continue."
        exit 1
    fi

    flags=(
      -Djava.io.tmpdir="$TMPDIR"
      -jar $jenkins_war
      --argumentsRealm.passwd.$ADMIN_USER=$ADMIN_PASSWORD
      --argumentsRealm.roles.$ADMIN_USER=admin
      --httpPort=$PORT
      --ajp13Port=$AJP13_PORT # unless ssl
    )

    # if [[ -n "$HTTPS_PORT" && -s "$HTTPS_KEYSTORE_FILE" ]]
    # then
    #   flags+=(
    #     --httpsPort=$HTTPS_PORT
    #     --httpsKeyStore="$HTTPS_KEYSTORE_FILE"
    #     --httpsKeyStorePassword="$HTTPS_KEYSTORE_PASSWORD"
    #     --ajp13Port="-1"
    #   )
    # fi

    exec chpst -u vcap:vcap $java_binary ${flags[*]} \
         >>$LOG_DIR/$JOB_NAME.stdout.log \
         2>>$LOG_DIR/$JOB_NAME.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: jenkins_master_ctl {start|stop}"

    ;;

esac
exit 0
